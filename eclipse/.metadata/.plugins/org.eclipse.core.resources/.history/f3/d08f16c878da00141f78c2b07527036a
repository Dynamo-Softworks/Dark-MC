package com.ncd1998.nmod.Items;


import java.util.List;
import java.util.Random;

import com.ncd1998.nmod.nmod;

import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.monster.EntityBlaze;
import net.minecraft.entity.monster.EntityGhast;
import net.minecraft.entity.monster.EntityMagmaCube;
import net.minecraft.entity.monster.EntityPigZombie;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Blocks;
import net.minecraft.item.EnumAction;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.BlockPos;
import net.minecraft.util.ChatComponentTranslation;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumParticleTypes;
import net.minecraft.util.IChatComponent;
import net.minecraft.world.World;
import net.minecraft.world.storage.WorldInfo;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;
import net.minecraft.util.DamageSource;
import net.minecraft.block.BlockPortal;
public class SpellPaperEscapeO extends Item{
	private final String name = "SpellPaperEscapeO";
	
	public SpellPaperEscapeO(){
		GameRegistry.registerItem(this, name);
		setUnlocalizedName(nmod.MODID + "_" + name);
		setCreativeTab(CreativeTabs.tabMisc);
	}
	
	public String getName(){
		return name;
	}
	//add Warning
	@Override
	public void addInformation(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, List par3List, boolean par4)
	{
	par3List.add("A highly unstable spell for emergencies!");
	}
	//On finish Use

	@SideOnly(Side.CLIENT)
	 public ItemStack onItemUseFinish(ItemStack stack, World worldIn, EntityPlayer playerIn)
	    {
		playerIn.stopUsingItem();
		stack.stackSize--;
		if(worldIn.provider.getDimensionId() != 0){
			playerIn.travelToDimension(0);
		}else{
			playerIn.addChatMessage(new ChatComponentTranslation("You can't escape into the overworld from the overworld..."));
		}
			return stack;
	    }
	/*public boolean onItemUse(ItemStack stack, EntityPlayer playerIn, World worldIn, BlockPos pos, EnumFacing side, float hitX, float hitY, float hitZ)
    {
		for(int i = 0; i < 6; i++){
			EntityBlaze Blaze = new EntityBlaze(worldIn);
			Blaze.setLocationAndAngles(pos.getX() + i,pos.getY() + i,pos.getZ() + i,0 , 0);
			worldIn.spawnEntityInWorld(Blaze);
		}
		for(int i = 0; i < 6; i++){
			EntityBlaze Blaze = new EntityBlaze(worldIn);
			Blaze.setLocationAndAngles(pos.getX() - i,pos.getY() + i,pos.getZ() - i,0 , 0);
			worldIn.spawnEntityInWorld(Blaze);
		}
		for(int i = 0; i < 6; i++){
			EntityBlaze Blaze = new EntityBlaze(worldIn);
			Blaze.setLocationAndAngles(pos.getX() - i,pos.getY() + i,pos.getZ() + i,0 , 0);
			worldIn.spawnEntityInWorld(Blaze);
		}
		for(int i = 0; i < 6; i++){
			EntityBlaze Blaze = new EntityBlaze(worldIn);
			Blaze.setLocationAndAngles(pos.getX() - i,pos.getY() + i,pos.getZ() - i,0 , 0);
			worldIn.spawnEntityInWorld(Blaze);
		}
		return true;
    }*/
	public EnumAction getItemUseAction(ItemStack stack)
    {
        return EnumAction.BOW;
    }
	 public int getMaxItemUseDuration(ItemStack stack)
	    {
	        return 10;
	    }
	 public ItemStack onItemRightClick(ItemStack itemStackIn, World worldIn, EntityPlayer playerIn)
	    {
		 Random rand = new Random();
	        playerIn.setItemInUse(itemStackIn, this.getMaxItemUseDuration(itemStackIn));
	        for(int i = 0; i <=20; i++){
	        	worldIn.spawnParticle(EnumParticleTypes.PORTAL, playerIn.getPosition().getX() + rand.nextInt(5), playerIn.getPosition().getY() + 2 + rand.nextInt(5), playerIn.getPosition().getZ() + rand.nextInt(5), 0, 0, 0);
	        }
	        for(int i = 0; i <=20; i++){
	        	worldIn.spawnParticle(EnumParticleTypes.PORTAL, playerIn.getPosition().getX() - rand.nextInt(5), playerIn.getPosition().getY() + 2 - rand.nextInt(5), playerIn.getPosition().getZ() - rand.nextInt(5), 0, 0, 0);
	        }
	        
	        return itemStackIn;
	    }
	 
	 public void onUsingTick(ItemStack stack, EntityPlayer player, int count)
	    {
		 Random rand = new Random();
		 for(int i = 0; i <=2; i++){
	        	player.getEntityWorld().spawnParticle(EnumParticleTypes.PORTAL, player.getPosition().getX() + rand.nextInt(3), player.getPosition().getY() + rand.nextInt(5), player.getPosition().getZ() + rand.nextInt(10), 0, 0, 0);
	        }
	        for(int i = 0; i <=5; i++){
	        	player.getEntityWorld().spawnParticle(EnumParticleTypes.PORTAL, player.getPosition().getX() - rand.nextInt(3), player.getPosition().getY() + rand.nextInt(5), player.getPosition().getZ() - rand.nextInt(10), 0, 0, 0);
	        }
	        for(int i = 0; i <=5; i++){
	        	player.getEntityWorld().spawnParticle(EnumParticleTypes.PORTAL, player.getPosition().getX() + rand.nextInt(3), player.getPosition().getY() + rand.nextInt(5), player.getPosition().getZ() - rand.nextInt(10), 0, 0, 0);
	        }
	        for(int i = 0; i <=5; i++){
	        	player.getEntityWorld().spawnParticle(EnumParticleTypes.PORTAL, player.getPosition().getX() - rand.nextInt(3), player.getPosition().getY() + rand.nextInt(5), player.getPosition().getZ() + rand.nextInt(10), 0, 0, 0);
	        }
		 
	    }
}
